基于 用户 统计 信息 的 推荐 , 识别 当前 要 预测 的 用户 的 相似 用户 , 根据 其 生成 当前 要 预测 项目 的 评价 分 .
其 优点 是 易于 发现 新异 兴趣 , 且 不 存在 新 用户 间 题 ; 缺点 是 用户 的 人口 信息 统计 资料 难以 得到 .
.
LZ 国内 的 应用 策略 国内 主要 使用 的 推荐 策略 有 :分 类 浏览 !
关键词搜索 !
流行 推荐 !
相关 推荐 和 信函 推荐 .
分类浏览 是 指 根据 商品 类别 逐 层 查找 , 范围 从 大 到 小 !
依次 细化 , 从而 快速定位 到 用户 需要 商品 , 这种 方法 的 缺点 是 需要 用户 主动 去 找 自己 感 兴趣 的 商品 , 没有 个性化 推荐 .
关键词搜索 是 用户 通过 搜索引擎 , 输入 感 兴趣 信息 的 关键 词 , 从而 定位 到 用户 需要 的 信息 , 这种 方法 的 缺点 是 需要 用户 主动 输入 相关 信息 , 并且 反馈 的 信息 很 庞大 , 冗余 信息 很多 .
流行 推荐 是 向 用户 推荐 最 畅销 的 商品 ; 基于 某 一 商品 的 推荐 是 一 种 相关性 推荐 ; 信函 推荐 是 以 邮件 !
短 信 的 形式 向 用户 推荐 相关 商品 , 存在 垃圾 邮件 !
垃圾 短 信 的 问题 , 并且 以上 3 种 方法 并 没有 实现 很 好 的 个性化 推荐 .
2 个性化 服务 推荐 模型 个性化 服务 推荐 系统 模型 图 如 图 1 所 示 .
该 系统 主要 包括 移动 终端 和 云端 两 部分 .
移动 终端 通过 GPS 定位 得到 经纬度信息 , 并 根据 经纬度信息 , 向 云端 请求 天气 信息 , 也 可以 向 云端 分享 带 经纬度信息 的 文字 !
图片 和 视频 等 信息 .
云端 存储 全部 注册 用户 上 传 的 文字 !
图片 和 视频 信息 , 并 为 每个 用户 分配 一 块 空间 , 通过 分析 每个 用户 的 用户 属性 和 上下文 信息 , 结合 社交 网络 和 时效性 , 建立 每个 用户 的 兴趣 模型 库 , 然后 根据 用户 兴趣 模型 库 推荐 用户 感 兴趣 的 文字 !
图片 和 视频 信息 .
该 系统 可以 分为 4 个 功能 模块 : GPS 地理 定位 模块 !
天气 查询 模块 !
信息 分享 模块 和 用户 兴趣 模型 库 模块 .
图 1 个性化 服务 稚 荐 系统 模型 图 2. 1GPs 地理 定位 模块 Android 手机 有 3 种 定位方式 , 分别 是 基站定位 !
WIFI 定位 和 GPS 定位 .
由于 基站定位 依赖 于 手机 无线 通讯 信号 , 定位误差 比较 大 , 而 WIFI 定位 原理 是 首先 首先 收集 每个 WIFI 无线 接入 点 的 位置 , 对 每个 无线 路由器进行 唯一 的 标识 , 在 数据库 中 注明 这些 接入 点 的 具体位置 , 要求 首先 要 确定 用户 接入 wiFI 网络 中 的 接 入 点 .
由于 Andro 记 手机 带有 GPS 定位 模块 , 且 定位精度 比较 高 , 因此 选用 GPS 定位 .
GPS 由 空间 部分 !
地面 控制系统 和 用户 设备 三 部分 组成 .
空间 部分 由 24 颗 工作 卫星 组成 , 均匀分布 在 6 个 轨道 面上 , 此外 还有 4 颗 有 源 备份 卫星 在 轨 运行 .
地面 控制 部分 由 一个 主控 站 !
5 个 全球 监测站 和 3 个 地面 控制站 组成 .
用户 设备 部分 即 GPS 信号 接收机 .
GPS 手机 导航 的 基本原理 是 测量 出 已 知 位置 的 卫星 到 用户 接收机 之间 的 距离 , 然后 综合 多 颗卫星 的 数据 就 可 知道 接收机 的 具体位置 [ sl .
首先 通过 罗 tsystemserviee ( ) 方法 获取 到 位置 管理服务 LoeationManager 的 一个 实例 , 然后 设置 服务信息 的 各项 属性 , 通过 调用 该 实例 的 getBestProvider ( ) 方法 得到 GPS 信息 , 再 根据 GPS 信息 获得 Location 位置 信息 , 从而 得到 经纬度 .
2. 2 天气 查询 模块 通过 GoogleWeatherAPI 获取 天气 信息 .
根据 经纬度 获取 天气 信息 的 URL 是 httP: / / ~ w .
google .
eom / 19 / 即 价 weather = , , , latitude , longtitude , 其中 latitude 和 longitude 为 实际 得到 的 经纬度 乘 以 10 的 6 次 方 .
根据 HTTP 协议 , 传入 URL 后 得到 的 是 XML 格式 的 信息 , 解析 xML 格式信息 , 就 能 得到 天气 数据 .
2. 3 信息 分享 模块 [ 0l 用户 每 到 一个 地方 , 都 可以 发表 一些 对 该 地方 的 评论 , 或 分享 一些 有趣 的 图片 和 视频 , 当 其他 用户 到达 这个 地方 时 , 通过 其他 用户 分享 到 云端 的 评论 !
图片 和 视频 , 能 更 好 的 认识 当前 地点 , 同时 能 更 好 的 了解 好友 动态 和 认识 新 的 朋友 .
信息 分享 包括 上 传 文字 !
图片 和 视频 到 云端 , 采用 HTTP 协议 实现 .
首先 , 建立客户端 和 云端 的 一个 Socket 连接 , 获得 输出 流 , 然后 设置 HTTP 请求 头 , 并 分别 封装 文字 和 文件 实体 信息 , 将 封装 好 的 字 节流 发送 到 输出 流 ; 在 云端 , 读取 输入 流 的 内容 .
2. 4 用户 兴趣 模型 库 的 建立 [ v ] 用户 兴趣 模型 库 如 图2 所 示 .
图 2 用户 兴趣 模型 图 图片 能 形象 地 反映 不同 地理 位置 的 特点 , 能 让 用户 更 直观 地 了解 所在地 点 的 信息 , 因此 此处 以 个性化 图片 推荐 为 例 .
将 用户 兴趣 度 归 一 化 用户 兴趣 度范围 是 " 一 1 , 0 表示 不 敢 兴趣 , 1 表示 最 感 兴趣 .
对于 每张 图片 , 都 有 5 个 属性 , 分别 是 纬度 ( lati 七 ude ) , 经度 ( longitude ) , 是否 好友 分享 ( isfriend ) , 图片 类别 ( eatego 巧 ) , 分享 时间 ( time ) .
对于 某 一个 特定 的 用户 , 若 云端 存储 的 图片 是 好友 分享 , 则 isfriend 为 1 ; 反之 , 若 不 是 好友 分享 , 则 isfriend 为 0. 图片 类别 主要 有 4 类 : 生活 时尚 !
体育 军事 !
游戏 动 漫 !
爆 笑 趣 图 .
在 云端 , 根据 用户 自己 过去 已经 分享 的 图片 的 类别 !
用户 年龄 !
性别 !
职业 等 信息 计算 出 每个 用户 对 这 4 类 图片 的 图片 类别 兴趣 度 ( category 二 nterest ) .
图片 类别 兴趣 度 从 大 到 小 依次 为 1! 0. 7! 0. 4! 0. 1. 考虑 到 信息 的 时效性 ( effectiveness ) , 根据 图片 分享 到 云端 的 时间 距 当前 时间 的 时间差 分为 4 个 时间段 .
若 时间差 为 0 一 7 天 , 时效性 为 1 ; 若 时间差 为 7 天 一 30 天 , 时效性 为 0. 7 ; 若 时间差 为 1月 一 3月 , 时效性 为 0. 3 ; 若 时间差 超过 3 个 月 , 时效性 为 0. 是否 好友 分享 !
