训练 过程 中 , 输入 层 和 隐 层 通常 有 多 个 神经元 , 设 输入 层 有 " 个 神经元 , 隐 层 有 n 个 神经元 , 输入 信息 为 : 1 , 22 , , , : " , 这样 隐 层 每个 神经元 都 接收 了 一定 权 重 的 输入 层 的 信息 , 则 第 j 个 隐 层 神经元 的 输入 值 为 其 中 见 图 J 个 神经元 的 权 重 .
神经 网络 拓扑 结构图 1ANN 模型 的 拓扑 结构图 输入 层 到 隐 层 的 输出 信息 为 场 一 f ( 艺 " - , : - 一 0j ) , J = = 1 , 2 , 3 , , ( 4 ) f ( x ) 为 S 型 传递 函数 , v !
一 " 恶 , 其 作用 是 将 输入 数据 映射 到 ( 0 , 1 ) 范围 内 , 隽 为 阂 值 # 输出 层 在 本文 预测 中 只 有 一 层 , 其 隐 层 到 输出 层 的 输入 值 为 其中 p = 1 , 2 , 3 , , , p 个 训练 样本 的 计算误差 一 箱 勺 一 勺 ) 2 ( 7 ) 这里 采用 梯度 最 速 下降 法 来 求 E 的 最 小 值 , 通过 不断 地 调整 输入 层 和 隐 层 的 权 值 来 达到 训练 样本 的 预测 最 优 , BP 神经 网络 的 学习 算法 的 具体步骤 可见 !
15 ] : 由于 对 混 合 时间 序列 , 无法 用 单一 的 模型 来 拟合 预测 , 因为 丢失 的 一部分 信息 从而 低估 残差 部分 对 预测 结果 的 影响 , 而 尝试 用 线性 和 非线性 的 混 合 模型 可以 某种 程度 上 弥补 单一 模型 的 缺点 .
具体 来说 , 考虑 先 用 指数 平滑 模型 对 时间 序列 进行 预测 , 提取 出 时间 序列 中 的 线性 部分 , 再 对 线性 预测 的 残差 进行 神经 网络 建模 , 并 用 前 几 天 的 残差 来 预测 当前 的 残差 .
而 具体 神经 网络 结构 用 时间 序列 所 估计 的 ARIMA 模型 的 自 回归 阶数 来 确定 .
设 用 指数 加权 平滑 模型 预测 出 的 时间 序列 为 L: , 则 这里 时间 序列 e: 是 指数 加权 滑动平均 模型 预测 的 残差 , 是 一 列 非线性 时间 序列 .
再 用 BP 神经 网络 对 残差 进行 训练 预测 , 对 残差 部分 进行 ARIMA 建模 , 确定 自 回归 阶数 p , 则 神经 网络 的 预测 精度 要 高 ( 具体 见 下 一 节 实证 分析 部分 ) .
但是 用 这种 传统 混 合 模型 的 前提 假设 是 时间 序列 的 线性 和 非线性 部分 是 可 加 的 , 这样 会 低估 了 这 两 个 部分 之间 的 关系 , 有 可能 是 相乘 的 关系 .
而且 也 无法 确定 线性 成分 的 残差 部分 就 一定 服从 非线性 的 模型 .
基于 此 , 有 必要 对 MEA 模型 进行 改进 , 并且 这里 所 提出 的 新 的 时间 序列 预测 模型 不 需要 传统 混 合 模型 的 假设 前提 , 也 能 保证 这种 改进 的 模型 ( 记 做 IEA 模型 ) 既 能 比 单一 的 指数 加权 滑动平均 模型 和 神经 网络 模型 好 , 也 比 MEA 模型 具有 更 好 的 预测 精度 .
由于 传统 的 混 合 模型 是 时间 序列 线性 部分 和 非线性 部分 的 线性 叠 加 , 即 Zt = L , 十 Nt 其中 L: 表示 时间 序列 的 线性 部分 , Nt 表示 时间 序列 的 非线性 部分 .
L: 是 用 指数 平滑 模型 提取 出来 的 , 从 是 经 指数 平滑 模型 预测 之后 的 残差 部分 , 用 BP 神经 网络 处理 , 其中 , 神经 网络 的 输入 阶数 由 时间 序列 的 AIUMA 模型 的 自 回归 阶数 确定 , 因为 自 回归 阶数 一定 程度 上 很 接近 的 表示 了 时间 序列 的 历史 数据 和 当前 数据 之间 的 输入 输出 关系 .
这里 所 提出 的 改进 指数 加权 滑动平均 神经 网络 模型 ( IEA 模型 ) 也 可以 说是 MEA 模型 的 一 种 推广 , 而 认为 时间 序列 的 线性 部分 和 非线性 部分 服从 某种 函数关系 , 即 及 = f ( L " , 从 ) ( 11 ) 具体 的 算法 过程 如下 : 第1 步 线性 建模 .
首先 对 时间 序列 进行 指数 平滑 预测 , 得到 预测 值 L - 和 残差 " " , 预测 值 是 时间 序列 的 线性 部分 其中 , L: 是 时刻 t 由 指数 平滑 所得 的 预测 值 , " - 是 t 时刻 的 线性 预测 残差 .
事实上 , " : 不仅仅 是 非线性 的 , 其中 还 含有 线性 的 成分 , 这 就 不 是 指数 平滑 模型 所 能 处理 的 了 .
所以 预测 值 和 残差 将 会 被 下 一 步 中 所 运用 .
第 2 步 非线性 建模 .
在 第一 步 的 基础 上 进一步 对 非线性 部分 Nt 进行 分解 .
因为 无法 保证 由 指数 平滑 预测 后 的 残差 部分 就 刚好 服从 非线性 的 模式 , 残差 还 有 可能 包含 有 线性 成分 , 而 如果 残差 部分 仍旧 包含 线性 成分 , 那么 指数 平滑 模型 的 预测 是 不 充分 的 ; 原始 数据 中 也 有 可能 存在 线性 成分 , 也 会 给 EWMA 模型 的 预测 造成 影响 , 所以 这里 将 残差 部分 和 原始 数据 的 非线性 部分 提取 出 来 , 即 Nl 亡 表示 残差 的 非线性 部分 , 凡 " 表示 历史 数据 的 非线性 部分 , 而 N1 " = fl ( e 卜 1 , e 卜 2 , , , e: 一 " ) , 凡 : = f2 ( 及 一 1 , 夙 一 2 , , , Zt 一! ) ( 14 ) 其中 fl , 儿 是 由 神经 网络 决定 的 非线性函数 .
这样 , 完整 的 模型 可 表示 为 Zt = f ( Nl " , L 亡 ) , 从 * = f ( e 卜 1 , e " 一 2 , , , et 一 " 1 , L: , zt 一 1 , 及 一 2 , , , 及 一二 1 ) ( 15 ) f 是 由 神经 网络 决定 的 非线性函数 , ml , nl 是 由 神经 网络 的 输入 结构 所 决定 的 阶数 , 当然 , 如果 序列 只 包含 线性 结构 , 那么 n: = 0 ; 若 序列 只 包含 非线性 结构 , 则 L , 会 被 去掉 , 而 只 用 其他 剩余 的 变量 .
第 3 步 对于 输入 层 残差 非线性 部分 的 输入 神经元 个数 的 确定 和 历史 数据 的 非线性 部分 输入 神经元 个数 的 确定 ( 即 m , , " : 的 确定 ) , 这里 利用 对 原始 数据 的 ARIMA 建模 的 阶数 来 确定 .
